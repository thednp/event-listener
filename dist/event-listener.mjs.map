{"version":3,"file":"event-listener.mjs","sources":["../src/index.ts"],"sourcesContent":["/**\n * Advanced event listener based on subscribe / publish pattern.\n *\n * @see https://www.patterns.dev/posts/classic-design-patterns/#observerpatternjavascript\n * @see https://gist.github.com/shystruk/d16c0ee7ac7d194da9644e5d740c8338#file-subpub-js\n * @see https://hackernoon.com/do-you-still-register-window-event-listeners-in-each-component-react-in-example-31a4b1f6f1c8\n */\n\ntype ListenerObject = Map<EventListener, AddEventListenerOptions | undefined | boolean>;\ntype EventsRegistry = Record<string, Map<EventTarget, ListenerObject>>;\nconst eventsRegistry: EventsRegistry = {};\n\n/**\n * The global event listener. This function must be a Function.\n * eslint-ignore-next\n */\nconst globalListener = (e: Event): void => {\n  const { type, target, currentTarget } = e;\n\n  [...eventsRegistry[type]].forEach(([element, listenersMap]) => {\n    /* istanbul ignore else */\n    if ([currentTarget, target].includes(element)) {\n      [...listenersMap].forEach(([listener, options]) => {\n        listener.apply(element, [e]);\n\n        if (typeof options === 'object' && options.once) {\n          removeListener(element, type, listener, options);\n        }\n      });\n    }\n  });\n};\n\n/**\n * Register a new listener with its options and attach the `globalListener`\n * to the target if this is the first listener.\n */\nconst addListener = (\n  element: EventTarget,\n  eventType: string,\n  listener: EventListener,\n  options?: AddEventListenerOptions,\n): void => {\n  // get element listeners first\n  if (!eventsRegistry[eventType]) {\n    eventsRegistry[eventType] = new Map();\n  }\n  const oneEventMap = eventsRegistry[eventType];\n\n  if (!oneEventMap.has(element)) {\n    oneEventMap.set(element, new Map());\n  }\n  const oneElementMap = oneEventMap.get(element) as ListenerObject;\n\n  // get listeners size\n  const { size } = oneElementMap;\n\n  // register listener with its options\n  oneElementMap.set(listener, options);\n\n  // add listener last\n  if (!size) {\n    element.addEventListener(eventType, globalListener, options);\n  }\n};\n\n/**\n * Remove a listener from registry and detach the `globalListener`\n * if no listeners are found in the registry.\n *\n */\nconst removeListener = (\n  element: EventTarget,\n  eventType: string,\n  listener: EventListener,\n  options?: AddEventListenerOptions,\n): void => {\n  // get listener first\n  const oneEventMap = eventsRegistry[eventType];\n  const oneElementMap = oneEventMap && oneEventMap.get(element);\n  const savedOptions = oneElementMap && oneElementMap.get(listener);\n\n  // also recover initial options\n  const eventOptions = savedOptions !== undefined ? savedOptions : options;\n\n  // unsubscribe second, remove from registry\n  if (oneElementMap && oneElementMap.has(listener)) oneElementMap.delete(listener);\n  if (oneEventMap && (!oneElementMap || !oneElementMap.size)) oneEventMap.delete(element);\n  if (!oneEventMap || !oneEventMap.size) delete eventsRegistry[eventType];\n\n  // remove listener last\n  /* istanbul ignore else */\n  if (!oneElementMap || !oneElementMap.size) {\n    element.removeEventListener(eventType, globalListener, eventOptions);\n  }\n};\n\nexport default {\n  on: addListener,\n  off: removeListener,\n  globalListener,\n  registry: eventsRegistry,\n};\n"],"names":["eventsRegistry","globalListener","e","type","target","currentTarget","element","listenersMap","listener","options","removeListener","addListener","eventType","oneEventMap","oneElementMap","size","savedOptions","eventOptions","index"],"mappings":"AAUA,MAAMA,IAAiC,CAAA,GAMjCC,IAAiB,CAACC,MAAmB;AACzC,QAAM,EAAE,MAAAC,GAAM,QAAAC,GAAQ,eAAAC,EAAA,IAAkBH;AAEvC,GAAA,GAAGF,EAAeG,EAAK,EAAE,QAAQ,CAAC,CAACG,GAASC,CAAY,MAAM;AAE7D,IAAI,CAACF,GAAeD,CAAM,EAAE,SAASE,CAAO,KACzC,CAAA,GAAGC,CAAY,EAAE,QAAQ,CAAC,CAACC,GAAUC,CAAO,MAAM;AACjD,MAAAD,EAAS,MAAMF,GAAS,CAACJ,CAAC,CAAC,GAEvB,OAAOO,KAAY,YAAYA,EAAQ,QAC1BC,EAAAJ,GAASH,GAAMK,GAAUC,CAAO;AAAA,IACjD,CACD;AAAA,EACH,CACD;AACH,GAMME,IAAc,CAClBL,GACAM,GACAJ,GACAC,MACS;AAEL,EAACT,EAAeY,OACHZ,EAAAY,yBAAiB;AAElC,QAAMC,IAAcb,EAAeY;AAEnC,EAAKC,EAAY,IAAIP,CAAO,KAC1BO,EAAY,IAAIP,GAAa,oBAAA,IAAK,CAAA;AAE9B,QAAAQ,IAAgBD,EAAY,IAAIP,CAAO,GAGvC,EAAE,MAAAS,EAAS,IAAAD;AAGH,EAAAA,EAAA,IAAIN,GAAUC,CAAO,GAG9BM,KACKT,EAAA,iBAAiBM,GAAWX,GAAgBQ,CAAO;AAE/D,GAOMC,IAAiB,CACrBJ,GACAM,GACAJ,GACAC,MACS;AAET,QAAMI,IAAcb,EAAeY,IAC7BE,IAAgBD,KAAeA,EAAY,IAAIP,CAAO,GACtDU,IAAeF,KAAiBA,EAAc,IAAIN,CAAQ,GAG1DS,IAAeD,MAAiB,SAAYA,IAAeP;AAG7D,EAAAK,KAAiBA,EAAc,IAAIN,CAAQ,KAAGM,EAAc,OAAON,CAAQ,GAC3EK,MAAgB,CAACC,KAAiB,CAACA,EAAc,SAAOD,EAAY,OAAOP,CAAO,IAClF,CAACO,KAAe,CAACA,EAAY,SAAM,OAAOb,EAAeY,KAIzD,CAACE,KAAiB,CAACA,EAAc,SAC3BR,EAAA,oBAAoBM,GAAWX,GAAgBgB,CAAY;AAEvE,GAEeC,IAAA;AAAA,EACb,IAAIP;AAAA,EACJ,KAAKD;AAAA,EACL,gBAAAT;AAAA,EACA,UAAUD;AACZ;"}