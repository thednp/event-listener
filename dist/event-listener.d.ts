// Generated by dts-bundle-generator v6.12.0

/**
 * Advanced event listener based on subscribe / publish pattern.
 *
 * @see https://www.patterns.dev/posts/classic-design-patterns/#observerpatternjavascript
 * @see https://gist.github.com/shystruk/d16c0ee7ac7d194da9644e5d740c8338#file-subpub-js
 * @see https://hackernoon.com/do-you-still-register-window-event-listeners-in-each-component-react-in-example-31a4b1f6f1c8
 */
export declare type ListenerObject = Map<EventListener, AddEventListenerOptions | undefined | boolean>;
export declare type EventsRegistry = Record<string, Map<EventTarget, ListenerObject>>;
declare const _default: {
	on: (element: EventTarget, eventType: string, listener: EventListener, options?: AddEventListenerOptions | undefined) => void;
	off: (element: EventTarget, eventType: string, listener: EventListener, options?: AddEventListenerOptions | undefined) => void;
	globalListener: (e: Event) => void;
	registry: EventsRegistry;
};

export {
	_default as default,
};

export {};
