// EventListener v1.0.4 | thednp Â© 2022 | MIT-License
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).EventListener=t()}(this,(function(){"use strict";const e={};function t(t){const o=this,{type:s}=t;[...e[s]].forEach(e=>{const[i,f]=e;i===o&&[...f].forEach(e=>{const[o,f]=e;o.apply(i,[t]),f&&f.once&&n(i,s,o,f)})})}const n=(n,o,s,i)=>{const f=e[o],c=f&&f.get(n),d=c&&c.get(s),{options:r}=void 0!==d?d:{options:i};c&&c.has(s)&&c.delete(s),!f||c&&c.size||f.delete(n),f&&f.size||delete e[o],c&&c.size||n.removeEventListener(o,t,r)};return{on:(n,o,s,i)=>{e[o]||(e[o]=new Map);const f=e[o];f.has(n)||f.set(n,new Map);const c=f.get(n),{size:d}=c;c.set(s,i),d||n.addEventListener(o,t,i)},off:n,globalListener:t,registry:e}}));
