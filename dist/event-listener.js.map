{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { EventsRegistry } from './types';\n\nconst EventRegistry: EventsRegistry = {};\n\nexport { EventRegistry };\n\n/**\n * The global event listener. This function must be a Function.\n *\n */\nexport function globalListener(e: Event): void {\n  const that = this;\n  const { type } = e;\n\n  [...EventRegistry[type]].forEach((elementsMap) => {\n    const [element, listenersMap] = elementsMap;\n    /* istanbul ignore else */\n    if (element === that) {\n      [...listenersMap].forEach((listenerMap) => {\n        const [listener, options] = listenerMap;\n        listener.apply(element, [e]);\n\n        if (options && options.once) {\n          removeListener(element, type, listener, options);\n        }\n      });\n    }\n  });\n}\n\n/**\n * Register a new listener with its options and attach the `globalListener`\n * to the target if this is the first listener.\n */\nexport const addListener = (\n  element: EventTarget,\n  eventType: string,\n  listener: EventListener,\n  options?: AddEventListenerOptions\n): void => {\n  // get element listeners first\n  if (!EventRegistry[eventType]) {\n    EventRegistry[eventType] = new Map();\n  }\n  const oneEventMap = EventRegistry[eventType];\n\n  if (!oneEventMap.has(element)) {\n    oneEventMap.set(element, new Map());\n  }\n  const oneElementMap = oneEventMap.get(element);\n\n  // get listeners size\n  if (typeof oneElementMap === 'undefined') return;\n\n  const { size } = oneElementMap;\n\n  // register listener with its options\n  oneElementMap.set(listener, options);\n\n  // add listener last\n  if (!size) {\n    element.addEventListener(eventType, globalListener, options);\n  }\n};\n\n/**\n * Remove a listener from registry and detach the `globalListener`\n * if no listeners are found in the registry.\n *\n */\nexport const removeListener = (\n  element: EventTarget,\n  eventType: string,\n  listener: EventListener,\n  options?: AddEventListenerOptions\n): void => {\n  // get listener first\n  const oneEventMap = EventRegistry[eventType];\n  const oneElementMap = oneEventMap && oneEventMap.get(element);\n  const savedOptions = oneElementMap && oneElementMap.get(listener);\n\n  // also recover initial options\n  const eventOptions = savedOptions !== undefined ? savedOptions : options;\n\n  // unsubscribe second, remove from registry\n  if (oneElementMap && oneElementMap.has(listener)) oneElementMap.delete(listener);\n  if (oneEventMap && (!oneElementMap || !oneElementMap.size)) oneEventMap.delete(element);\n  if (!oneEventMap || !oneEventMap.size) delete EventRegistry[eventType];\n\n  // remove listener last\n  /* istanbul ignore else */\n  if (!oneElementMap || !oneElementMap.size) {\n    element.removeEventListener(eventType, globalListener, eventOptions);\n  }\n};\n\n/**\n * Advanced event listener based on subscribe / publish pattern.\n * @see https://www.patterns.dev/posts/classic-design-patterns/#observerpatternjavascript\n * @see https://gist.github.com/shystruk/d16c0ee7ac7d194da9644e5d740c8338#file-subpub-js\n * @see https://hackernoon.com/do-you-still-register-window-event-listeners-in-each-component-react-in-example-31a4b1f6f1c8\n */\nexport default {\n  on: addListener,\n  off: removeListener,\n  globalListener,\n  registry: EventRegistry,\n};\n\n// export default Listener;\n"],
  "mappings": ";;;;;;AAEA,IAAM,gBAAgC,CAAC;AAQhC,SAAS,eAAe,GAAgB;AAC7C,QAAM,OAAO;AACb,QAAM,EAAE,KAAK,IAAI;AAEjB,GAAC,GAAG,cAAc,KAAK,EAAE,QAAQ,CAAC,gBAAgB;AAChD,UAAM,CAAC,SAAS,YAAY,IAAI;AAEhC,QAAI,YAAY,MAAM;AACpB,OAAC,GAAG,YAAY,EAAE,QAAQ,CAAC,gBAAgB;AACzC,cAAM,CAAC,UAAU,OAAO,IAAI;AAC5B,iBAAS,MAAM,SAAS,CAAC,CAAC,CAAC;AAE3B,YAAI,WAAW,QAAQ,MAAM;AAC3B,yBAAe,SAAS,MAAM,UAAU,OAAO;AAAA,QACjD;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AACH;AAMO,IAAM,cAAc,CACzB,SACA,WACA,UACA,YACS;AAET,MAAI,CAAC,cAAc,YAAY;AAC7B,kBAAc,aAAa,oBAAI,IAAI;AAAA,EACrC;AACA,QAAM,cAAc,cAAc;AAElC,MAAI,CAAC,YAAY,IAAI,OAAO,GAAG;AAC7B,gBAAY,IAAI,SAAS,oBAAI,IAAI,CAAC;AAAA,EACpC;AACA,QAAM,gBAAgB,YAAY,IAAI,OAAO;AAG7C,MAAI,OAAO,kBAAkB;AAAa;AAE1C,QAAM,EAAE,KAAK,IAAI;AAGjB,gBAAc,IAAI,UAAU,OAAO;AAGnC,MAAI,CAAC,MAAM;AACT,YAAQ,iBAAiB,WAAW,gBAAgB,OAAO;AAAA,EAC7D;AACF;AAOO,IAAM,iBAAiB,CAC5B,SACA,WACA,UACA,YACS;AAET,QAAM,cAAc,cAAc;AAClC,QAAM,gBAAgB,eAAe,YAAY,IAAI,OAAO;AAC5D,QAAM,eAAe,iBAAiB,cAAc,IAAI,QAAQ;AAGhE,QAAM,eAAe,iBAAiB,SAAY,eAAe;AAGjE,MAAI,iBAAiB,cAAc,IAAI,QAAQ;AAAG,kBAAc,OAAO,QAAQ;AAC/E,MAAI,gBAAgB,CAAC,iBAAiB,CAAC,cAAc;AAAO,gBAAY,OAAO,OAAO;AACtF,MAAI,CAAC,eAAe,CAAC,YAAY;AAAM,WAAO,cAAc;AAI5D,MAAI,CAAC,iBAAiB,CAAC,cAAc,MAAM;AACzC,YAAQ,oBAAoB,WAAW,gBAAgB,YAAY;AAAA,EACrE;AACF;AAQA,IAAO,cAAQ;AAAA,EACb,IAAI;AAAA,EACJ,KAAK;AAAA,EACL;AAAA,EACA,UAAU;AACZ;",
  "names": []
}
