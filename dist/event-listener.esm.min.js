// EventListener v0.0.1alpha1 | thednp Â© 2022 | MIT-License
const e={};function t(t){const n=this,{type:o}=t;(e[o]?[...e[o]]:[]).forEach(e=>{const[i,c]=e;[...c].forEach(e=>{if(i===n){const[n,c]=e;n.apply(i,[t]),c&&c.once&&s(i,o,n,c)}})})}const s=(s,n,o,i)=>{const c=e[n],a=c&&c.get(s),{options:r}=a?a.get(o):{options:i};a&&a.has(o)&&a.delete(o),a&&a.size||c.delete(s),c&&c.size||delete e[n],a&&a.size||s.removeEventListener(n,t,r)},n={on:(s,n,o,i)=>{e[n]||(e[n]=new Map);const c=e[n];c.has(s)||c.set(s,new Map);const a=c.get(s),{size:r}=a;a&&a.set(o,i),r||s.addEventListener(n,t,i)},off:s,globalListener:t,registry:e};export{n as default};
