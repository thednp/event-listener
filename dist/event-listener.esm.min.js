// EventListener v0.0.5 | thednp Â© 2022 | MIT-License
const e={};function t(t){const s=this,{type:n}=t;(e[n]?[...e[n]]:[]).forEach(e=>{const[i,c]=e;[...c].forEach(e=>{if(i===s){const[s,c]=e;s.apply(i,[t]),c&&c.once&&o(i,n,s,c)}})})}const s=(s,o,n,i)=>{e[o]||(e[o]=new Map);const c=e[o];c.has(s)||c.set(s,new Map);const a=c.get(s),{size:r}=a;a&&a.set(n,i),r||s.addEventListener(o,t,i)},o=(s,o,n,i)=>{const c=e[o],a=c&&c.get(s),r=a&&a.get(n),{options:p}=void 0!==r?r:{options:i};a&&a.has(n)&&a.delete(n),!c||a&&a.size||c.delete(s),c&&c.size||delete e[o],a&&a.size||s.removeEventListener(o,t,p)},n={on:s,off:o,globalListener:t,registry:e};export{e as EventRegistry,s as addListener,n as default,t as globalListener,o as removeListener};
