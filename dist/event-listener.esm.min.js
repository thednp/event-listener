// EventListener v1.0.2 | thednp Â© 2022 | MIT-License
const e={};function t(t){const o=this,{type:n,target:i}=t;[...e[n]].forEach(e=>{const[a,c]=e;[i,o].some(e=>a===e)&&[...c].forEach(e=>{const[o,i]=e;o.apply(a,[t]),i&&i.once&&s(a,n,o,i)})})}const s=(s,o,n,i)=>{const a=e[o],c=a&&a.get(s),r=c&&c.get(n),{options:p}=void 0!==r?r:{options:i};c&&c.has(n)&&c.delete(n),!a||c&&c.size||a.delete(s),a&&a.size||delete e[o],c&&c.size||s.removeEventListener(o,t,p)},o={on:(s,o,n,i)=>{e[o]||(e[o]=new Map);const a=e[o];a.has(s)||a.set(s,new Map);const c=a.get(s),{size:r}=c;c.set(n,i),r||s.addEventListener(o,t,i)},off:s,globalListener:t,registry:e};export{o as default};
