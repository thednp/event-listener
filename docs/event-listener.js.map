{"version":3,"file":"event-listener.js","sources":["../src/index.ts"],"sourcesContent":["/**\n * Advanced event listener based on subscribe / publish pattern.\n *\n * @see https://www.patterns.dev/posts/classic-design-patterns/#observerpatternjavascript\n * @see https://gist.github.com/shystruk/d16c0ee7ac7d194da9644e5d740c8338#file-subpub-js\n * @see https://hackernoon.com/do-you-still-register-window-event-listeners-in-each-component-react-in-example-31a4b1f6f1c8\n */\n\ntype ListenerObject = Map<EventListener, AddEventListenerOptions | undefined | boolean>;\ntype EventsRegistry = Record<string, Map<EventTarget, ListenerObject>>;\nconst eventsRegistry: EventsRegistry = {};\n\n/**\n * The global event listener. This function must be a Function.\n * eslint-ignore-next\n */\nconst globalListener = (e: Event): void => {\n  const { type, target, currentTarget } = e;\n\n  [...eventsRegistry[type]].forEach(([element, listenersMap]) => {\n    /* istanbul ignore else */\n    if ([currentTarget, target].includes(element)) {\n      [...listenersMap].forEach(([listener, options]) => {\n        listener.apply(element, [e]);\n\n        if (typeof options === 'object' && options.once) {\n          removeListener(element, type, listener, options);\n        }\n      });\n    }\n  });\n};\n\n/**\n * Register a new listener with its options and attach the `globalListener`\n * to the target if this is the first listener.\n */\nconst addListener = (\n  element: EventTarget,\n  eventType: string,\n  listener: EventListener,\n  options?: AddEventListenerOptions,\n): void => {\n  // get element listeners first\n  if (!eventsRegistry[eventType]) {\n    eventsRegistry[eventType] = new Map();\n  }\n  const oneEventMap = eventsRegistry[eventType];\n\n  if (!oneEventMap.has(element)) {\n    oneEventMap.set(element, new Map());\n  }\n  const oneElementMap = oneEventMap.get(element) as ListenerObject;\n\n  // get listeners size\n  const { size } = oneElementMap;\n\n  // register listener with its options\n  oneElementMap.set(listener, options);\n\n  // add listener last\n  if (!size) {\n    element.addEventListener(eventType, globalListener, options);\n  }\n};\n\n/**\n * Remove a listener from registry and detach the `globalListener`\n * if no listeners are found in the registry.\n *\n */\nconst removeListener = (\n  element: EventTarget,\n  eventType: string,\n  listener: EventListener,\n  options?: AddEventListenerOptions,\n): void => {\n  // get listener first\n  const oneEventMap = eventsRegistry[eventType];\n  const oneElementMap = oneEventMap && oneEventMap.get(element);\n  const savedOptions = oneElementMap && oneElementMap.get(listener);\n\n  // also recover initial options\n  const eventOptions = savedOptions !== undefined ? savedOptions : options;\n\n  // unsubscribe second, remove from registry\n  if (oneElementMap && oneElementMap.has(listener)) oneElementMap.delete(listener);\n  if (oneEventMap && (!oneElementMap || !oneElementMap.size)) oneEventMap.delete(element);\n  if (!oneEventMap || !oneEventMap.size) delete eventsRegistry[eventType];\n\n  // remove listener last\n  /* istanbul ignore else */\n  if (!oneElementMap || !oneElementMap.size) {\n    element.removeEventListener(eventType, globalListener, eventOptions);\n  }\n};\n\nexport default {\n  on: addListener,\n  off: removeListener,\n  globalListener,\n  registry: eventsRegistry,\n};\n"],"names":["eventsRegistry","globalListener","e","type","target","currentTarget","element","listenersMap","listener","options","removeListener","addListener","eventType","oneEventMap","oneElementMap","size","savedOptions","eventOptions"],"mappings":"qCAUA,MAAMA,EAAiC,CAAA,EAMjCC,EAAkBC,GAAmB,CACzC,KAAM,CAAE,KAAAC,EAAM,OAAAC,EAAQ,cAAAC,CAAA,EAAkBH,EAEvC,CAAA,GAAGF,EAAeG,EAAK,EAAE,QAAQ,CAAC,CAACG,EAASC,CAAY,IAAM,CAEzD,CAACF,EAAeD,CAAM,EAAE,SAASE,CAAO,GACzC,CAAA,GAAGC,CAAY,EAAE,QAAQ,CAAC,CAACC,EAAUC,CAAO,IAAM,CACjDD,EAAS,MAAMF,EAAS,CAACJ,CAAC,CAAC,EAEvB,OAAOO,GAAY,UAAYA,EAAQ,MAC1BC,EAAAJ,EAASH,EAAMK,EAAUC,CAAO,CACjD,CACD,CACH,CACD,CACH,EAMME,EAAc,CAClBL,EACAM,EACAJ,EACAC,IACS,CAEJT,EAAeY,KACHZ,EAAAY,OAAiB,KAElC,MAAMC,EAAcb,EAAeY,GAE9BC,EAAY,IAAIP,CAAO,GAC1BO,EAAY,IAAIP,EAAa,IAAA,GAAK,EAE9B,MAAAQ,EAAgBD,EAAY,IAAIP,CAAO,EAGvC,CAAE,KAAAS,CAAS,EAAAD,EAGHA,EAAA,IAAIN,EAAUC,CAAO,EAG9BM,GACKT,EAAA,iBAAiBM,EAAWX,EAAgBQ,CAAO,CAE/D,EAOMC,EAAiB,CACrBJ,EACAM,EACAJ,EACAC,IACS,CAET,MAAMI,EAAcb,EAAeY,GAC7BE,EAAgBD,GAAeA,EAAY,IAAIP,CAAO,EACtDU,EAAeF,GAAiBA,EAAc,IAAIN,CAAQ,EAG1DS,EAAeD,IAAiB,OAAYA,EAAeP,EAG7DK,GAAiBA,EAAc,IAAIN,CAAQ,GAAGM,EAAc,OAAON,CAAQ,EAC3EK,IAAgB,CAACC,GAAiB,CAACA,EAAc,OAAOD,EAAY,OAAOP,CAAO,GAClF,CAACO,GAAe,CAACA,EAAY,OAAM,OAAOb,EAAeY,IAIzD,CAACE,GAAiB,CAACA,EAAc,OAC3BR,EAAA,oBAAoBM,EAAWX,EAAgBgB,CAAY,CAEvE,QAEe,CACb,GAAIN,EACJ,IAAKD,EACL,eAAAT,EACA,SAAUD,CACZ"}